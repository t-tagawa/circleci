version: 2

jobs:
  build:

    docker:
      - image: circleci/python:3.6.1

    environment:
      - AWS_AMI_ID: ami-29160d47
      - AWS_INSTANCE_TYPE: t2.micro
      - AWS_CF_STACK_NAME: ci-test
      - SSH_USER: ec2-user
      - BASE_STACK_NAME: eks-dev-base
      - K8S_CLUSTER_NAME: eks-dev-Cluster
      - K8S_VERSION: "1.11"
      - REGION: ap-northeast-1

    steps:
      - checkout
      - run:
          name: install the AWS CLI
          command: |
            sudo pip install --upgrade pip
            sudo pip install awscli
      - run:
          name: install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.9/2019-03-27/bin/linux/amd64/kubectl
            chmod +x kubectl
      - run:
          name: install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/darwin/amd64/aws-iam-authenticator
            chmod +x aws-iam-authenticator
#      - run:
#          name: create vpc
#          command: |
#            aws cloudformation create-stack --region ${REGION} --stack-name ${BASE_STACK_NAME} --template-body=file://template-eks-base.yaml --capabilities CAPABILITY_NAMED_IAM
#            # スタックの完了を待つ
#            aws cloudformation wait stack-create-complete --stack-name ${BASE_STACK_NAME}
      - run:
          name: create eks(control plane)
          command: |
            CONTROLLPLANE_SECURITYGROUP_IDS=$(aws cloudformation describe-stacks --region ${REGION} --stack-name ${BASE_STACK_NAME} |jq -r '.Stacks[].Outputs[] | select(.OutputKey == "SecurityGroups")' | jq -r '.OutputValue')
            VPC_ID=$(aws cloudformation describe-stacks --region ${REGION} --stack-name ${BASE_STACK_NAME} |jq -r '.Stacks[].Outputs[] | select(.OutputKey == "VpcId")' | jq -r '.OutputValue')
            SUBNET_IDS=$(aws cloudformation describe-stacks --region ${REGION} --stack-name ${BASE_STACK_NAME} |jq -r '.Stacks[].Outputs[] | select(.OutputKey == "SubnetIds")' | jq -r '.OutputValue')
            CLUSTER_ROLE_ARN=$(aws cloudformation describe-stacks --region ${REGION} --stack-name ${BASE_STACK_NAME} |jq -r '.Stacks[].Outputs[] | select(.OutputKey == "ClusterRoleArn")' | jq -r '.OutputValue')
            aws eks create-cluster --region ${REGION} --kubernetes-version ${K8S_VERSION} --name ${K8S_CLUSTER_NAME} --role-arn ${CLUSTER_ROLE_ARN} --resources-vpc-config subnetIds=${SUBNET_IDS},securityGroupIds=${CONTROLLPLANE_SECURITYGROUP_IDS}
            # クラスターステータスがACTIVEになるのを待つ
            aws eks describe-cluster --region ${REGION} --name ${K8S_CLUSTER_NAME} --query cluster.status
